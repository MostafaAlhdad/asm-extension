{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Assembly language",
	"patterns": [
		
		{
			"include": "#comments"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#operands"
		},
		{
			"include": "#etc"
		}
	],
	"repository": {
		"operators": {
			"patterns": [{
				"name": "keyword.operator.new.asm",
				"match": "%|[|]|\\.|,|:|\\$|-"
			}]
		},
		"keywords": {
			"patterns" : [
			{
				"name": "header.asm",
				"match": "\\b(macro|include|endmacro|define|assign)\\b"
			},
			{
				"name": "entity.name.class.asm",
				"match": "\\b(section|segment)\\b"
			},
			{
				"name": "entity.name.class.asm",
				"match": "(([a-zA-Z_]+[a-zA-Z0-9]*):|global)"
			},
			{
				"name": "constant.character.escape",
				"match": "\\b(_start)\\b"
			}]
		},
		"operands": {
			"patterns" : [{
				"name":"entity.name.function.asm",
				"match": "\\b(syscall|push|pop|call|ret)\\b"	
			},
			{
				"name":"storage.modifier.asm",
				"match": "\\b(byte|db|dl|dw|resb|db|dw|dq|dt|resw|resd|resq|rest)\\b"	
			},
			{
				"name":"storage.type.asm",
				"match": "\\b(edx|ecx|ebx|eax|al|ah|ax|dx|cx|bx|rax|rdx|rbx|rcx)\\b"
			},
			{
				"name":"keyword.operator.new.asm",
				"match": "\\b(int|mov|inc|dec|add|sub|test|mul|div|idiv|imul|and|or|xor|not|cmp|equ|aaa|aas|aam|aad|daa|das|movs|lods|stos|cmps|scas)\\b"
			},
			{
				"name":"keyword.control.asm",
				"match": "\\b(je|jz|jne|jnz|jg|jnle|jge|jnl|jl|jnge|jle|jng|ja|jnbe|jae|jb|jnae|jbe|jna|jxcz|jc|jnc|jo|jno|jp|jpe|jnp|jpo|js|jns)\\b"
			}
		]
		},
		"numbers":{
			"patterns": [
				{
					"name": "constant.numeric.asm",
					"match": "(\\d+|\\d+\\.\\d+)"		
				},
				{
					"name": "constant.numeric.asm",
					"match": "[0-9a-fA-F]*h"
				},
				{
					"name": "constant.numeric.asm",
					"match": "\\d{0}x[0-9a-fA-F]+"
				}
			]
		},
		"etc" : {
			"patterns" :[{
				"name":"variable.parameter.asm",
				"match": "([a-zA-Z_]+[a-zA-Z0-9]*)"
			}]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.asm",
					"begin": "\"",
					"end": "\""
				},
				{
					"name": "string.quoted.single.asm",
					"begin": "'",
					"end": "'"
				}
			]
		},
		"comments": {
			"patterns": [{
				"name": "comment.line.asm",
				"match": ";.*"
			}]
		}
	},
	"scopeName": "source.asm"
}